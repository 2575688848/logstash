input{
    kafka{
        bootstrap_servers => "10.20.0.19:9092,10.20.0.20:9092,10.20.0.22:9092"
        group_id => "nginx_wannx_m"
        topics => ["higo_main_log"]
        consumer_threads => 16
        type => "nginx_wannx_m"
    }

    kafka{
            bootstrap_servers => "10.20.0.19:9092,10.20.0.20:9092,10.20.0.22:9092"
            group_id => "nginx_wannx_im"
            topics => ["higo_im_log"]
            consumer_threads => 16
            type => "nginx_wannx_im"
        }

    kafka{
        bootstrap_servers => "10.20.0.19:9092,10.20.0.20:9092,10.20.0.22:9092"
        group_id => "nginx_lannx_fex_service"
        topics => ["nginx_lannx_fex_service"]
        consumer_threads => 16
        type => "nginx_lannx_fex_service"
    }

}

filter {
    grok {
        match => {
            "message" => "\[%{DATA:remote_addr}\] \[%{DATA:remote_user}\] \[%{DATA:time_local}\] \[%{DATA:request}\] \[%{DATA:status}\] \[%{DATA:body_bytes_sent}\] \[%{DATA:http_referer}\] \[%{DATA:http_user_agent}\] \[%{DATA:http_x_forwarded_for}\] \[%{DATA:http_cookie}\] \[%{DATA:request_time}\] \[%{DATA:upstream_addr}\] \[%{DATA:upstream_response_time}\] \[%{DATA:empty}\] \[%{DATA:host}\] \[%{DATA:sent_http_set_cookie}\]"
        }
    }

    if [upstream_response_time] == "-" {
        mutate { remove_field => "upstream_response_time" }
    }

    if [request_time] == "-" {
        mutate { remove_field => "request_time" }
    }

    if [body_bytes_sent] == "-" {
        mutate { remove_field => "body_bytes_sent" }
    }

    ruby {
    	code => "
    	    response_time = event.get('upstream_response_time')
            request_time = event.get('request_time')
            if !response_time.nil?
            	if response_time.include?','
            		response_arr = response_time.split(',')
            		num = response_arr.length
            		event.set('upstream_response_time', response_arr[num - 1].strip)
            		event.set('upstream_response_times', num)
            	end
            end

            if !request_time.nil?
            	if request_time.include?','
            		request_arr = request_time.split(',')
            		num = request_arr.length
            		event.set('request_time', request_arr[num - 1].strip)
            		event.set('request_times', num)
            	end
            end
    	"
    }

}


output {
    if[type] == "nginx_wannx_im" {
        elasticsearch {
            index => "nginx_wannx_im_%{+YYYY.MM}"
            hosts => ["http://localhost:9200"]
        }
    }

    if[type] == "nginx_wannx_m" {
        elasticsearch {
            index => "nginx_wannx_m_%{+YYYY.MM}"
            hosts => ["http://localhost:9200"]
        }
    }

    if[type] == "nginx_lannx_fex_service" {
        elasticsearch {
            index => "nginx_lannx_fex_service_%{+YYYY.MM}"
            hosts => ["http://localhost:9200"]
        }
    }

}
